[{"/home/sd-01/Sample/WYSIWYG-react-editors/src/App.js":"1","/home/sd-01/Sample/WYSIWYG-react-editors/src/index.js":"2","/home/sd-01/Sample/WYSIWYG-react-editors/src/reportWebVitals.js":"3"},{"size":7291,"mtime":1613645220572,"results":"4","hashOfConfig":"5"},{"size":500,"mtime":1611636848971,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1611636848971,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"fa2ly3",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sd-01/Sample/WYSIWYG-react-editors/src/App.js",["15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34"],"import React, { useState } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { convertToHTML } from \"draft-convert\";\nimport DOMPurify from \"dompurify\";\nimport Avatar from \"react-avatar-edit\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Bar, Doughnut, Pie } from \"react-chartjs-2\";\nimport moment from \"moment\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nvar passwordValidator = require(\"password-validator\");\n\n// Create a schema\nvar schema = new passwordValidator();\nschema\n  .is()\n  .min(8) // Minimum length 8\n  .is()\n  .digits(1) // Must have at least 2 digits\n  .has()\n  .not()\n  .spaces() // Should not have spaces\n  .is()\n  .not();\n\nconst App = () => {\n  const imagePath = \"./einshtein.jpg\";\n  const [convertedContent, setConvertedContent] = useState();\n  const [preview, setPreview] = useState(null);\n  const [src, setSrc] = useState(imagePath);\n  const [errorState, setErrorState] = useState();\n  const [isEmailValid, setIsEmailValid] = useState();\n  const dateString = moment.unix(1613731440).utc().hour();\n  // .format(\"YYYY-MM-DD[T00:00:00.000]\");\n  console.log(dateString);\n  const onClose = () => {\n    setPreview(null);\n  };\n\n  const onCrop = (preview) => {\n    setPreview(preview);\n  };\n\n  const onFinish = (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.target),\n      formDataObj = Object.fromEntries(formData.entries());\n    console.log(formDataObj);\n  };\n\n  const validatePassword = (e) => {\n    e.preventDefault();\n    console.log(e.currentTarget.value);\n    console.log(schema.validate(e.currentTarget.value));\n    setErrorState(schema.validate(e.currentTarget.value));\n  };\n\n  const validateEmail = (e) => {\n    if (\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n        e.currentTarget.value\n      )\n    ) {\n      setIsEmailValid(true);\n      return true;\n    }\n    // alert(\"You have entered an invalid email address!\");\n    setIsEmailValid(false);\n    return false;\n  };\n\n  // const [editorState, setEditorState] = useState(() =>\n  //   EditorState.createEmpty()\n  // );\n  // const [convertedContent, setConvertedContent] = useState();\n  // const handleEditorChange = (state) => {\n  //   setEditorState(state);\n  //   convertContentToHTML();\n  // };\n  // const convertContentToHTML = () => {\n  //   let currentContentAsHTML = convertToHTML(editorState.getCurrentContent());\n  //   console.log(currentContentAsHTML);\n  //   setConvertedContent(currentContentAsHTML);\n  // };\n  // const createMarkup = (html) => {\n  //   return {\n  //     __html: DOMPurify.sanitize(html),\n  //   };\n  // };\n  const data = {\n    labels: [\"No of men \", \"Married\", \"Single\", \"Divorced\", \"Age Range\"],\n    datasets: [\n      {\n        label: \"Men\",\n        data: [12, 19, 3, 5, [10, 40]],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  // const dataDonut = {\n  //   data: {\n  //     labels: [\"Men\", \"Women\"],\n  //     datasets: [\n  //       {\n  //         label: \"Women/Men\",\n  //         data: [10, 50],\n  //         backgroundColor: [\n  //           \"rgb(255, 99, 132)\",\n  //           \"rgb(54, 162, 235)\",\n  //           // \"rgb(255, 205, 86)\",\n  //         ],\n  //         hoverOffset: 4,\n  //       },\n  //     ],\n  //   },\n  // };\n  const dataDonut = {\n    maintainAspectRatio: false,\n    responsive: false,\n    labels: [\"Men\", \"Wome\"],\n    datasets: [\n      {\n        data: [10, 50],\n        backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\"],\n        hoverBackgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\"],\n      },\n    ],\n  };\n\n  const options = {\n    legend: {\n      display: false,\n      position: \"right\",\n    },\n    elements: {\n      arc: {\n        borderWidth: 0,\n      },\n    },\n  };\n\n  const styles = {\n    pieContainer: {\n      width: \"40%\",\n      height: \"40%\",\n      top: \"50%\",\n      left: \"50%\",\n      position: \"absolute\",\n      transform: \"translate(-50%, -50%)\",\n    },\n    relative: {\n      position: \"relative\",\n    },\n  };\n  return (\n    <div className=\"App\">\n      <Bar\n        data={data}\n\n        // options={{ maintainAspectRatio: false }}\n      />\n      {/* <Doughnut data={dataDonut} options={options} /> */}\n      <div style={styles.relative}>\n        <Pie data={dataDonut} options={options} />\n        {/* <div style={styles.pieContainer}>\n          <Pie\n            data={data}\n            options={pieOptions}\n            ref={input => {\n              chartInstance = input;\n            }}\n          />\n        </div> */}\n        <div id=\"legend\" />\n      </div>\n      {/* <header className=\"App-header\">Rich Text Editor Example</header>\n      <Editor\n        editorState={editorState}\n        onEditorStateChange={handleEditorChange}\n        wrapperClassName=\"wrapper-class\"\n        editorClassName=\"editor-class\"\n        toolbarClassName=\"toolbar-class\"\n      />\n      <div\n        className=\"preview\"\n        dangerouslySetInnerHTML={createMarkup(convertedContent)}\n      ></div> */}\n      {/* <Avatar\n        width={390}\n        height={295}\n        onCrop={onCrop}\n        onClose={onClose}\n        src={src}\n      />\n      <img src={preview} alt=\"Preview\" /> */}\n      {/* \n      <Form onSubmit={onFinish}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            onChange={validateEmail}\n          />\n          {isEmailValid === false ? (\n            <Form.Text className=\"text-danger\">Email is valid</Form.Text>\n          ) : isEmailValid === true ? (\n            <Form.Text className=\"text-success\">Email is Invalid</Form.Text>\n          ) : null}\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={validatePassword}\n          />\n          {errorState === false ? (\n            <Form.Text className=\"text-danger\">\n              Password me 8 characters long and must be alphanumeric\n            </Form.Text>\n          ) : errorState === true ? (\n            <Form.Text className=\"text-success\">Password acceptable</Form.Text>\n          ) : null}\n        </Form.Group>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Check me out\" />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form> */}\n    </div>\n  );\n};\n\nexport default App;\n","/home/sd-01/Sample/WYSIWYG-react-editors/src/index.js",[],"/home/sd-01/Sample/WYSIWYG-react-editors/src/reportWebVitals.js",[],{"ruleId":"35","severity":1,"message":"36","line":2,"column":10,"nodeType":"37","messageId":"38","endLine":2,"endColumn":21},{"ruleId":"35","severity":1,"message":"39","line":3,"column":10,"nodeType":"37","messageId":"38","endLine":3,"endColumn":16},{"ruleId":"35","severity":1,"message":"40","line":5,"column":10,"nodeType":"37","messageId":"38","endLine":5,"endColumn":23},{"ruleId":"35","severity":1,"message":"41","line":6,"column":8,"nodeType":"37","messageId":"38","endLine":6,"endColumn":17},{"ruleId":"35","severity":1,"message":"42","line":7,"column":8,"nodeType":"37","messageId":"38","endLine":7,"endColumn":14},{"ruleId":"35","severity":1,"message":"43","line":8,"column":10,"nodeType":"37","messageId":"38","endLine":8,"endColumn":14},{"ruleId":"35","severity":1,"message":"44","line":8,"column":16,"nodeType":"37","messageId":"38","endLine":8,"endColumn":22},{"ruleId":"35","severity":1,"message":"45","line":9,"column":15,"nodeType":"37","messageId":"38","endLine":9,"endColumn":23},{"ruleId":"35","severity":1,"message":"46","line":31,"column":10,"nodeType":"37","messageId":"38","endLine":31,"endColumn":26},{"ruleId":"35","severity":1,"message":"47","line":31,"column":28,"nodeType":"37","messageId":"38","endLine":31,"endColumn":47},{"ruleId":"35","severity":1,"message":"48","line":32,"column":10,"nodeType":"37","messageId":"38","endLine":32,"endColumn":17},{"ruleId":"35","severity":1,"message":"49","line":33,"column":10,"nodeType":"37","messageId":"38","endLine":33,"endColumn":13},{"ruleId":"35","severity":1,"message":"50","line":33,"column":15,"nodeType":"37","messageId":"38","endLine":33,"endColumn":21},{"ruleId":"35","severity":1,"message":"51","line":34,"column":10,"nodeType":"37","messageId":"38","endLine":34,"endColumn":20},{"ruleId":"35","severity":1,"message":"52","line":35,"column":10,"nodeType":"37","messageId":"38","endLine":35,"endColumn":22},{"ruleId":"35","severity":1,"message":"53","line":39,"column":9,"nodeType":"37","messageId":"38","endLine":39,"endColumn":16},{"ruleId":"35","severity":1,"message":"54","line":43,"column":9,"nodeType":"37","messageId":"38","endLine":43,"endColumn":15},{"ruleId":"35","severity":1,"message":"55","line":47,"column":9,"nodeType":"37","messageId":"38","endLine":47,"endColumn":17},{"ruleId":"35","severity":1,"message":"56","line":54,"column":9,"nodeType":"37","messageId":"38","endLine":54,"endColumn":25},{"ruleId":"35","severity":1,"message":"57","line":61,"column":9,"nodeType":"37","messageId":"38","endLine":61,"endColumn":22},"no-unused-vars","'EditorState' is defined but never used.","Identifier","unusedVar","'Editor' is defined but never used.","'convertToHTML' is defined but never used.","'DOMPurify' is defined but never used.","'Avatar' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Doughnut' is defined but never used.","'convertedContent' is assigned a value but never used.","'setConvertedContent' is assigned a value but never used.","'preview' is assigned a value but never used.","'src' is assigned a value but never used.","'setSrc' is assigned a value but never used.","'errorState' is assigned a value but never used.","'isEmailValid' is assigned a value but never used.","'onClose' is assigned a value but never used.","'onCrop' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'validatePassword' is assigned a value but never used.","'validateEmail' is assigned a value but never used."]